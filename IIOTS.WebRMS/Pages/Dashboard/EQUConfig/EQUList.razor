@using System.ComponentModel
@using AntDesign.TableModels
@using IIOTS.WebRMS.Services
@using IIOTS.Enum
@using IIOTS.Models
@using IIOTS.Util
@using IIOTS.WebRMS.Models
@using MQTTnet
@using MQTTnet.Protocol
@inject IFreeSql freeSql
@inject NavigationManager NavigationManager
@page "/EQUList"

@code {
    [Parameter]
    public EventCallback<EQUGroupEnity> SelectTagGroup { get; set; }
    [Parameter]
    public bool IsDisabled { get; set; } = false;
    List<EQUGroupEnity> equGroupEntities = new List<EQUGroupEnity>();
    /// <summary>
    ///初始化
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        await GetPage();
        await base.OnInitializedAsync();
        freeSql.CodeFirst.SyncStructure(typeof(EQUGroupEnity));

    }
    bool tableLoad = true;
    /// <summary>
    /// 页面刷新
    /// </summary>
    private async Task GetPage()
    {
        tableLoad = true;
        equGroupEntities = await freeSql
        .Select<EQUGroupEnity>()
        .ToListAsync();
        tableLoad = false;
    }
    #region 增加修改操作
    private EQUGroupEnity equGroupEntitie = new();
    bool _editBoxVisible = false;
    bool _editBoxLoading = false;
    private async Task AddOrUpdateTagGroup()
    {
        await freeSql
        .InsertOrUpdate<EQUGroupEnity>()
        .SetSource(equGroupEntitie)
        .ExecuteAffrowsAsync();
        await GetPage();
    }
    #endregion
    #region 删除弹窗
    /// <summary>
    /// 删除进程
    /// </summary>
    /// <param name="id"></param>
    private async Task Detect(EQUGroupEnity equGroup)
    {
        if (freeSql
            .GetRepository<EQUGroupEnity>()
            .DeleteCascadeByDatabase(p => p.Id == equGroup.Id)
            .Count > 0)
        {
            await GetPage();
        }
    }
    #endregion
}
<div>

    <Table TItem="EQUGroupEnity"
           DataSource="@equGroupEntities"
           Size="TableSize.Small"
           RowKey="x=>x.Id"
           ScrollX="max-content"
           Loading="@tableLoad">
        <Selection Hidden="IsDisabled" Key="@(context.Id.ToString())" />
        <PropertyColumn Title="设备组" Property="c=>c.EQU" Sortable />
        <PropertyColumn Title="工厂" Property="c=>c.Factory" Sortable />
        <PropertyColumn Title="备注" Property="c=>c.Description" Sortable />
        <PropertyColumn Title="创建时间" Property="c=>c.CreatTime" Format="yyyy-MM-dd HH:mm:ss" Sortable />
        <ActionColumn Title="操作">
            @if (IsDisabled)
            {
                <Space>
                    <SpaceItem>
                        <Button Type="@ButtonType.Primary"
                                OnClick="@(async()=>{
                            await SelectTagGroup.InvokeAsync(context);
                            })">
                            选择
                        </Button>
                    </SpaceItem>
                </Space>
            }
            else
            {
                <Space>
                    <SpaceItem>
                        <Button Type="@ButtonType.Primary"
                                OnClick="@(()=>{ NavigationManager.NavigateTo($"/EQUSubList/{context.Id}");})">
                            设备组明细
                        </Button>
                    </SpaceItem>
                </Space>
                <Space>
                    <SpaceItem>
                        <Button Type="@ButtonType.Primary"
                                OnClick="@(()=>{
                                        equGroupEntitie=context.DeepClone();
                                        _editBoxVisible = true;
                                        })">
                            编辑
                        </Button>
                    </SpaceItem>
                </Space>
                <Space>
                    <SpaceItem>
                        <Button Type="@ButtonType.Primary"
                                OnClick="@(()=>{NavigationManager.NavigateTo($"/Flow/d895c002f4f1994d");})">
                            流程编辑
                        </Button>
                    </SpaceItem>
                </Space>
                <Space>
                    <SpaceItem>
                        <Popconfirm Title="确认删除？"
                                    OnConfirm="@(async()=>{
                                                 tableLoad=true;
                                                 await Detect(context );
                                                 tableLoad=false;
                                              })">
                            <Button Danger Type="@ButtonType.Primary">
                                删除
                            </Button>
                        </Popconfirm>
                    </SpaceItem>
                </Space>
            }

        </ActionColumn>

    </Table>

</div>